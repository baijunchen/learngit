时间复杂度高的算法一般比时间复杂度低的算法跑的慢
运行时间：O(1)<O(logn)<O(n)<O(nlogn)<O(n**2)<O(n**2(logn))<O(n**3)
判断时间复杂度：
    循环减半的过程-> O(logn)
    几次循环就是几次方
while n>1 :
    print (n)
    n = n//2
时间复杂度为 O(logn)
空间复杂度：用来评估算法内存占用大小的一个式子
    开一个变量 O(1)
    开一个列表 O(n)
    开一个二维列表 O(n**2)
排序：
    1.最慢的三个排序：冒泡排序 选择排序 插入排序
    2.快速排序
    3.牛逼的排序：堆排序 归并排序